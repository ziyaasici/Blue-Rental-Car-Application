---
- name: Update System Packages
  hosts: _Blue_Rental_Task4
  gather_facts: no
  become: yes
  remote_user: ubuntu

  vars:
    aws_region: us-east-1
    aws_account_id: ""
    ecr_registry: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com"

  tasks:

    - name: Getting AWS Account ID
      shell: aws sts get-caller-identity --query 'Account' --output text
      register: account_id
    
    - name: Assing AWS Account ID to Variable
      set_fact:
        aws_account_id: "{{ account_id.stdout }}"

    - name: K3s Install
      shell: curl -sfL https://get.k3s.io | sh - 

    - name: Kompose Install
      get_url:
        url: "https://github.com/kubernetes/kompose/releases/download/v1.33.0/kompose-linux-amd64"
        dest: "/usr/local/bin/kompose"
        mode: '0755'
      notify:
        - Reload Kompose
        
    - name: Log in to AWS ECR
      shell: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 621627302500.dkr.ecr.us-east-1.amazonaws.com
      environment:
        AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
      register: aws_cli_result
      tags:
        - login_to_aws_ecr

    - name: Copy docker-compose.yml to the server
      copy:
        src: "{{ compose_dir }}/docker-compose.yml"
        dest: /home/ec2-user/docker-compose.yml

  handlers:
    - name: Reload Kompose
      shell: /bin/true


    # - name: Update system packages
    #   yum:
    #     name: '*'
    #     state: latest
    #   tags:
    #     - update_system_packages

    # - name: Remove old Docker versions
    #   yum:
    #     name:
    #       - docker
    #       - docker-client
    #       - docker-client-latest
    #       - docker-common
    #       - docker-latest
    #       - docker-latest-logrotate
    #       - docker-logrotate
    #       - docker-engine
    #     state: absent
    #   tags:
    #     - remove_old_docker_versions

    # - name: Install yum utilities
    #   yum:
    #     name: "{{ item }}"
    #     state: present
    #   loop:
    #     - git
    #     - docker
    #     - python3-pip
    #     - python3-devel
    #     - yum-utils
    #     - shadow-utils
    #   tags:
    #     - install_yum_utilities

    # - name: Upgrade system packages
    #   dnf:
    #     name: '*'
    #     state: latest
        
    # - name: Install Docker
    #   yum:
    #     name: docker
    #     state: latest
    #   tags:
    #     - install_docker

    # - name: Add user to Docker group
    #   user:
    #     name: ec2-user
    #     groups: docker
    #   tags:
    #     - add_user_to_docker_group

    # - name: Start and enable Docker service
    #   service:
    #     name: docker
    #     state: started
    #     enabled: yes
    #   tags:
    #     - start_docker_service

    # - name: Restart Docker service
    #   service:
    #     name: docker
    #     state: restarted
        
    # - name: Download and install Docker Compose
    #   get_url:
    #     url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64"
    #     dest: /usr/local/bin/docker-compose
    #     mode: '0755'
    #   tags:
    #     - install_docker_compose

    # - name: AWS CLI Test
    #   shell: |
    #     aws s3 ls
    #   environment:
    #     AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    #     AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    #   register: aws_cli_result
    #   tags:
    #     - aws_cli_test

    # - name: Log in to AWS ECR
    #   shell: |
    #     aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 621627302500.dkr.ecr.us-east-1.amazonaws.com
    #   environment:
    #     AWS_ACCESS_KEY_ID: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    #     AWS_SECRET_ACCESS_KEY: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    #   register: aws_cli_result
    #   tags:
    #     - login_to_aws_ecr

    # - name: Copy docker-compose.yml to the server
    #   copy:
    #     src: "{{ compose_dir }}/docker-compose.yml"
    #     dest: /home/ec2-user/docker-compose.yml
        
    # - name: Start Docker Compose
    #   command: docker-compose up -d --build
    #   args:
    #     chdir: /home/ec2-user/