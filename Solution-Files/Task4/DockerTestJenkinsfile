pipeline {
    agent any
    
    environment {
        DOCKER_HUB_USERNAME = credentials('ziyaasici')
        DOCKER_HUB_PASSWORD = credentials('Antiseptiq24.')
        DOCKER_HUB_EMAIL = 'ziya.asici@yahoo.com' // Replace with your Docker Hub email
        DOCKER_REGISTRY = 'ziyaasici'
        // IMAGE_NAME = 'your_image_name' // Replace with your image name
        // DOCKER_REPO_NAME = 'your_repo_name' // Replace with your repository name
    }

    stages {
        stage('Build Image') {
            steps {
                script {
                    sh(script: 'docker build --force-rm -t "${DOCKER_REGISTRY}:backend" "${WORKSPACE}/Solution-Files/Task3/apps/bluerentalcars-backend"', returnStdout: true)
                    sh(script: 'docker build --force-rm -t "${DOCKER_REGISTRY}:frontend" "${WORKSPACE}/Solution-Files/Task3/apps/bluerentalcars-frontend"', returnStdout: true)
                    sh(script: 'docker build --force-rm -t "${DOCKER_REGISTRY}:db" "${WORKSPACE}/Solution-Files/Task3/apps/postgresql"', returnStdout: true)
                }
            }
        }

        stage('Create Docker Hub Repository') {
            steps {
                script {
                    sh "curl -X POST -u ${DOCKER_HUB_USERNAME}:${DOCKER_HUB_PASSWORD} https://hub.docker.com/v2/repositories/${DOCKER_HUB_USERNAME}/frontend/"
                    sh "curl -X POST -u ${DOCKER_HUB_USERNAME}:${DOCKER_HUB_PASSWORD} https://hub.docker.com/v2/repositories/${DOCKER_HUB_USERNAME}/backend/"
                    sh "curl -X POST -u ${DOCKER_HUB_USERNAME}:${DOCKER_HUB_PASSWORD} https://hub.docker.com/v2/repositories/${DOCKER_HUB_USERNAME}/db/"
                }
            }
        }

        stage('Push Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_USERNAME, DOCKER_HUB_PASSWORD) {
                        docker.image("${DOCKER_REGISTRY}/frontend").push()
                        docker.image("${DOCKER_REGISTRY}/backend").push()
                        docker.image("${DOCKER_REGISTRY}/db").push()
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Image built and pushed successfully to Docker Hub'
        }
        failure {
            echo 'Failed to build or push image to Docker Hub'
        }
    }
}
